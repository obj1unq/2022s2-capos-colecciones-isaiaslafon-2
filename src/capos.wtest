import rolando.*
import cosas.*
import moradas.*

describe "Capos tests"{
	
	
	method initialize(){
		
	}
	
	test "Rolando tiene capacidad de llevar 2 cosas por defecto"{
		assert.equals(2, rolando.capacidad())
	}

	test "Rolando levanta espada y libro al encontrarlos pero no el collar divino ya que su capacidad es de 2 cosas"{
		rolando.encontrar(espadaDelDestino)
		rolando.encontrar(libroDeHechizos)
		assert.equals(#{espadaDelDestino,libroDeHechizos},rolando.artefactos())
		assert.notThat(rolando.artefactos().contains(collarDivino))
		//assert.throwsExceptionWithMessage("No puedo llevar más cosas!", {rolando.encontrar(collarDivino)})
	}

	test "Rolando levanta espada y libro los deja al ir al castillo"{
		rolando.encontrar(espadaDelDestino)
		rolando.encontrar(libroDeHechizos)
		rolando.visitarMorada()
		//assert.doesNotThrowException({rolando.encontrar(collarDivino)})
		rolando.encontrar(collarDivino)
		assert.equals(#{collarDivino}, rolando.artefactos())
		assert.equals(#{espadaDelDestino, libroDeHechizos}, castilloDePiedra.artefactos())
	}
	
	test "Rolando deja espada y libro en castillo luego levanta collar y al pasar otra vez estan todos en el baul y él no tiene nada"{
		rolando.encontrar(espadaDelDestino)
		rolando.encontrar(libroDeHechizos)
		//Deja todo por lo que libera espacio
		rolando.visitarMorada()
		rolando.encontrar(collarDivino)
		
		rolando.visitarMorada()
		
		assert.that(rolando.artefactos().isEmpty())
		assert.equals(#{espadaDelDestino, libroDeHechizos, collarDivino}, castilloDePiedra.artefactos())
	}
	
	test "Si Rolando dejó en el castillo el collar y la espada, y tiene encima la armadura, posee los tres, pero el libro no"{
		rolando.encontrar(collarDivino)
		rolando.encontrar(espadaDelDestino)
		rolando.visitarMorada()
		rolando.encontrar(armaduraDeAceroValyrio)
		
		assert.equals(#{espadaDelDestino, armaduraDeAceroValyrio, collarDivino}, rolando.posesiones())
		assert.notThat(rolando.posee(libroDeHechizos))	
	}
	
	test "Rolando recuerda lo que encontro en el orden correcto aunque lo encuentre más de una vez"{
	 	rolando.encontrar(espadaDelDestino)
	 	rolando.encontrar(libroDeHechizos)
  		rolando.encontrar(collarDivino)
 		rolando.visitarMorada()
 		rolando.encontrar(armaduraDeAceroValyrio)
 		rolando.encontrar(collarDivino)
	
 		assert.equals([espadaDelDestino, libroDeHechizos, collarDivino, armaduraDeAceroValyrio, collarDivino], rolando.historia())
 	}
 	
 	test "Rolando con espada, armadura y collar tiene 19 de poder"{
	 	rolando.capacidad(3)
	 	rolando.encontrar(espadaDelDestino)
	 	rolando.encontrar(armaduraDeAceroValyrio)
  		rolando.encontrar(collarDivino)
 		
 		assert.equals(19, rolando.poderDePelea())
 	}
 	
 	test "Rolando con espada, armadura y collar luego de pelear tiene 6 de base, espada aporta 3, armadura continua en 6 y collar 3"{
	 	rolando.capacidad(3)
	 	rolando.encontrar(espadaDelDestino)
	 	rolando.encontrar(armaduraDeAceroValyrio)
  		rolando.encontrar(collarDivino)
 		rolando.pelea()
 		
 		assert.equals(6, rolando.poderBase())
 		assert.equals(18, rolando.poderDePelea())
 	}
 	
 	test "Rolando con espada, armadura y collar luego de pelear 2 veces tiene 7 de base, espada aporta 3.5, armadura continua en 6 y collar 3"{
	 	rolando.capacidad(3)
	 	rolando.encontrar(espadaDelDestino)
	 	rolando.encontrar(armaduraDeAceroValyrio)
  		rolando.encontrar(collarDivino)
 		rolando.pelea()//1ra batalla
 		rolando.pelea()//2ra batalla
 		
 		assert.equals(7, rolando.poderBase())
 		assert.equals(7+3.5+6+5, rolando.poderDePelea())
 	}
 	
 	test "Rolando con espada, armadura y collar luego de pelear 3 veces tiene 8 de base, espada aporta 4, armadura continua en 6 y collar 6"{
	 	rolando.capacidad(3)
	 	rolando.encontrar(espadaDelDestino)
	 	rolando.encontrar(armaduraDeAceroValyrio)
  		rolando.encontrar(collarDivino)
 		rolando.pelea()//1ra batalla
 		rolando.pelea()//2ra batalla
 		rolando.pelea()//3ra batalla
 		
 		assert.equals(8, rolando.poderBase())
 		assert.equals(8+4+6+6, rolando.poderDePelea())
 	}
 	
 	/*
 	test "Hechizo Bendicion aporta 4 , Invisibilidad lo mismo que el poder base e Invocacion lo mismo que el artefacto más poderoso que lleve (la armadura)."{
	 	rolando.encontrar(armaduraDeAceroValyrio)
  		rolando.encontrar(collarDivino)
  		rolando.visitarMorada()
 		
 		assert.equals(4, bendicion.poder(rolando))
 		assert.equals(rolando.poderBase(), invisibilidad.poder(rolando))
 		assert.equals(armaduraDeAceroValyrio.poderQueAporta(rolando), invocacion.poderQueAporta(rolando))
 	}
 	
 	test "Libro usado 3 veces (vacio) aporta 0"{
		libroDeHechizos.usar(rolando) //descarta 1 de 3.
		libroDeHechizos.usar(rolando) //descarta 2 de 3.
		libroDeHechizos.usar(rolando) //descarta 3 de 3.
	 	assert.equals(0, libroDeHechizos.poderQueAporta(rolando))
 	}
 	 */
 	
 	
 	
 	
 	
 	
 	
}